/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlpt;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class HoaDon extends javax.swing.JFrame {

    /**
     * Creates new form HoaDon
     */
    private int idPhong;

    public HoaDon() {
        initComponents();
        setLocationRelativeTo(null);
        quanLiHoaDon.loadPhongToComboBox(cbxPhong);
        loadData();
    }

    QuanLiHoaDonDAO quanLiHoaDon = new QuanLiHoaDonDAO();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtMoTa = new javax.swing.JTextField();
        cbxPhong = new javax.swing.JComboBox<>();
        txtTienDien = new javax.swing.JTextField();
        txtPhiDichVu = new javax.swing.JTextField();
        txtTienNuoc = new javax.swing.JTextField();
        txtNgayLap = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbxTrangThai = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabHoaDon = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("HÓA ĐƠN THANH TOÁN");

        jLabel2.setText("Phòng:");

        jLabel3.setText("Ngày Lập: ");

        jLabel4.setText("Tiền Điện:  ");

        jLabel5.setText("Tiền Nước: ");

        jLabel6.setText("Phí Dịch Vụ: ");

        jLabel7.setText("Tổng Tiền");

        jLabel14.setText("Mô Tả: ");

        txtMoTa.setText("Mô tả...");
        txtMoTa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoTaActionPerformed(evt);
            }
        });

        cbxPhong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxPhongItemStateChanged(evt);
            }
        });

        txtTienDien.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtTienDienInputMethodTextChanged(evt);
            }
        });
        txtTienDien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienDienKeyReleased(evt);
            }
        });

        txtPhiDichVu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhiDichVuKeyReleased(evt);
            }
        });

        txtTienNuoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienNuocKeyReleased(evt);
            }
        });

        txtNgayLap.setText("Ngày/Tháng/Năm");

        txtTongTien.setEnabled(false);

        jLabel8.setText("Trạng Thái");

        cbxTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa Thanh Toán", "Đã Thanh Toán" }));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        TabHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Hóa Đơn", "Phòng", "Ngày Lập", "Tiền Điện", "Tiền Nước", "Phí Dịch Vụ", "Tổng Tiền", "Mô Tả", "Trạng Thái", "ID Phòng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabHoaDon);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(119, 119, 119))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMoTa)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(392, 392, 392)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtTongTien))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                                    .addComponent(txtTienNuoc)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(cbxTrangThai, 0, 168, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addComponent(btnThem)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(192, 192, 192)
                                                .addComponent(btnSua)
                                                .addGap(66, 66, 66)))
                                        .addComponent(btnXoa))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(35, 35, 35)
                                            .addComponent(cbxPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtTienDien, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtPhiDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(cbxPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtTienDien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTienNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtPhiDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbxTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        quanLiHoaDon.xoaHoaDon(TabHoaDon);
        loadData();
    }//GEN-LAST:event_btnXoaActionPerformed

    private int idHoaDon;
    private void TabHoaDonMouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = TabHoaDon.getSelectedRow(); // Lấy chỉ số dòng được chọn trong bảng

        if (selectedRow != -1) { // Kiểm tra nếu có dòng được chọn
            DefaultTableModel model = (DefaultTableModel) TabHoaDon.getModel(); // Lấy mô hình dữ liệu của bảng

            // Lấy dữ liệu từ các cột trong bảng và ép kiểu phù hợp
            idHoaDon = Integer.parseInt(model.getValueAt(selectedRow, 0).toString()); // Giả sử cột 0 là ID phòng
            String phong = model.getValueAt(selectedRow, 1).toString();
            String ngayLap = model.getValueAt(selectedRow, 2).toString(); // Cột 1 là ngày lập
            String tienDienStr = model.getValueAt(selectedRow, 3).toString(); // Cột 2 là tiền điện
            String tienNuocStr = model.getValueAt(selectedRow, 4).toString(); // Cột 3 là tiền nước
            String phiDichVuStr = model.getValueAt(selectedRow, 5).toString(); // Cột 4 là phí dịch vụ
            String tongTien = model.getValueAt(selectedRow, 6).toString(); // Cột 5 là tổng tiền
            String moTa = model.getValueAt(selectedRow, 7).toString(); // Cột 6 là mô tả
            Object trangThaiObj = model.getValueAt(selectedRow, 8);
            String trangThai = (trangThaiObj != null) ? trangThaiObj.toString() : "";
            idPhong = Integer.parseInt(model.getValueAt(selectedRow,9).toString());
            
            // Chuyển đổi các chuỗi thành số nếu cần
            double tienDien = 0, tienNuoc = 0, phiDichVu = 0;
            try {
                tienDien = Double.parseDouble(tienDienStr); // Chuyển đổi chuỗi tiền điện thành số
                tienNuoc = Double.parseDouble(tienNuocStr); // Chuyển đổi chuỗi tiền nước thành số
                phiDichVu = Double.parseDouble(phiDichVuStr); // Chuyển đổi chuỗi phí dịch vụ thành số
            } catch (NumberFormatException e) {
                // Nếu có lỗi trong việc chuyển đổi, thông báo lỗi
                JOptionPane.showMessageDialog(this, "Dữ liệu số không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Đổ dữ liệu lên các TextField và ComboBox
            txtNgayLap.setText(ngayLap); // Hiển thị ngày lập lên TextField
            txtTienDien.setText(String.valueOf(tienDien)); // Hiển thị tiền điện lên TextField
            txtTienNuoc.setText(String.valueOf(tienNuoc)); // Hiển thị tiền nước lên TextField
            txtPhiDichVu.setText(String.valueOf(phiDichVu)); // Hiển thị phí dịch vụ lên TextField
            txtTongTien.setText(String.valueOf(tongTien)); // Hiển thị tổng tiền lên TextField
            txtMoTa.setText(moTa); // Hiển thị mô tả lên TextField
            cbxTrangThai.setSelectedItem(trangThai); // Chọn trạng thái từ ComboBox
            System.out.println("Ma Hoa Don" + idHoaDon); 
            System.out.println("Ma Phong" + idPhong);
            // Bạn không cần lưu lại idPhong ở đây, vì đã sử dụng trong phần xử lý
        }
    }

    // GEN-LAST:event_TabHoaDonMouseClicked
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn sửa hóa đơn này?", "Xác nhận",
                JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            // Lấy dữ liệu từ form
            int id = idPhong; // Giả sử idPhong là ID của phòng
            String ngayLap = txtNgayLap.getText().trim();
            String tienDienStr = txtTienDien.getText().trim();
            String tienNuocStr = txtTienNuoc.getText().trim();
            String phiDichVuStr = txtPhiDichVu.getText().trim();
            String moTa = txtMoTa.getText().trim();
            String trangThai = (String) cbxTrangThai.getSelectedItem();

            // Kiểm tra ngày lập có bị bỏ trống không
            if (ngayLap.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ngày lập hóa đơn!", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kiểm tra định dạng ngày
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date ngayDate; // Định nghĩa như là java.util.Date
            try {
                ngayDate = sdf.parse(ngayLap);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Ngày không hợp lệ! Định dạng đúng: dd/MM/yyyy", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Chuyển java.util.Date thành java.sql.Date
            java.sql.Date sqlDate = new java.sql.Date(ngayDate.getTime());

            // Kiểm tra số tiền
            double tienDien, tienNuoc, phiDichVu;
            try {
                tienDien = Double.parseDouble(tienDienStr);
                tienNuoc = Double.parseDouble(tienNuocStr);
                phiDichVu = Double.parseDouble(phiDichVuStr);

                if (tienDien < 0 || tienNuoc < 0 || phiDichVu < 0) {
                    JOptionPane.showMessageDialog(this, "Số tiền không được âm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ cho tiền điện, nước và phí dịch vụ!",
                        "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Lấy giá phòng từ CSDL
            double giaPhong = quanLiHoaDon.getGiaPhong(id); // gọi phương thức lấy giá phòng từ CSDL

            // Tính tổng tiền
            double tongTien = tienDien + tienNuoc + phiDichVu + giaPhong;

            // Gọi DAO để sửa hóa đơn
            quanLiHoaDon.suaHoaDon(id, sqlDate, tienDien, tienNuoc, phiDichVu, tongTien, moTa, trangThai); // sử dụng
            // sqlDate

            quanLiHoaDon.loadHoaDonData(TabHoaDon); // Cập nhật dữ liệu vào bảng

            JOptionPane.showMessageDialog(this, "Sửa hóa đơn thành công!", "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage(), "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    // GEN-LAST:event_btnSuaActionPerformed

    private void txtPhiDichVuKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtPhiDichVuKeyReleased
        try {
            // Lấy giá trị từ các ô nhập
            String tienDienStr = txtTienDien.getText().trim();
            String tienNuocStr = txtTienNuoc.getText().trim();
            String phiDichVuStr = txtPhiDichVu.getText().trim();

            // Kiểm tra và chuyển đổi các giá trị tiền điện, tiền nước, phí dịch vụ sang
            // double
            double tienDien = tienDienStr.isEmpty() ? 0 : Double.parseDouble(tienDienStr);
            double tienNuoc = tienNuocStr.isEmpty() ? 0 : Double.parseDouble(tienNuocStr);
            double phiDichVu = phiDichVuStr.isEmpty() ? 0 : Double.parseDouble(phiDichVuStr);
            double giaPhong = quanLiHoaDon.getGiaPhong(idPhong);
            // Tính tổng tiền
            double tongTien = tienDien + tienNuoc + phiDichVu + giaPhong;

            // Hiển thị tổng tiền vào ô tương ứng
            txtTongTien.setText(String.valueOf(tongTien));
        } catch (NumberFormatException e) {
            txtTongTien.setText("0");
        }
    }// GEN-LAST:event_txtPhiDichVuKeyReleased

    private void txtTienNuocKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtTienNuocKeyReleased
        try {
            // Lấy giá trị từ các ô nhập
            String tienDienStr = txtTienDien.getText().trim();
            String tienNuocStr = txtTienNuoc.getText().trim();
            String phiDichVuStr = txtPhiDichVu.getText().trim();

            // Kiểm tra và chuyển đổi các giá trị tiền điện, tiền nước, phí dịch vụ sang
            // double
            double tienDien = tienDienStr.isEmpty() ? 0 : Double.parseDouble(tienDienStr);
            double tienNuoc = tienNuocStr.isEmpty() ? 0 : Double.parseDouble(tienNuocStr);
            double phiDichVu = phiDichVuStr.isEmpty() ? 0 : Double.parseDouble(phiDichVuStr);
            double giaPhong = quanLiHoaDon.getGiaPhong(idPhong);
            // Tính tổng tiền
            double tongTien = tienDien + tienNuoc + phiDichVu + giaPhong;

            // Hiển thị tổng tiền vào ô tương ứng
            txtTongTien.setText(String.valueOf(tongTien));
        } catch (NumberFormatException e) {
            txtTongTien.setText("0");
        }
    }// GEN-LAST:event_txtTienNuocKeyReleased

    private void txtTienDienKeyReleased(java.awt.event.KeyEvent evt) {
        try {
            // Lấy giá trị từ các ô nhập
            String tienDienStr = txtTienDien.getText().trim();
            String tienNuocStr = txtTienNuoc.getText().trim();
            String phiDichVuStr = txtPhiDichVu.getText().trim();

            // Kiểm tra và chuyển đổi các giá trị tiền điện, tiền nước, phí dịch vụ sang
            // double
            double tienDien = tienDienStr.isEmpty() ? 0 : Double.parseDouble(tienDienStr);
            double tienNuoc = tienNuocStr.isEmpty() ? 0 : Double.parseDouble(tienNuocStr);
            double phiDichVu = phiDichVuStr.isEmpty() ? 0 : Double.parseDouble(phiDichVuStr);
            double giaPhong = quanLiHoaDon.getGiaPhong(idPhong);
            // Tính tổng tiền
            double tongTien = tienDien + tienNuoc + phiDichVu + giaPhong;

            // Hiển thị tổng tiền vào ô tương ứng
            txtTongTien.setText(String.valueOf(tongTien));
        } catch (NumberFormatException e) {
            txtTongTien.setText("0");
        }
    }
    // GEN-LAST:event_txtTienDienKeyReleased

    private void txtTienDienInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {// GEN-FIRST:event_txtTienDienInputMethodTextChanged
        // try {
        // // Lấy giá trị từ các ô nhập
        // String tienDienStr = txtTienDien.getText().trim();
        // String tienNuocStr = txtTienNuoc.getText().trim();
        // String phiDichVuStr = txtPhiDichVu.getText().trim();
        //
        // // Kiểm tra và chuyển đổi các giá trị tiền điện, tiền nước, phí dịch vụ sang
        // // double
        // double tienDien = tienDienStr.isEmpty() ? 0 :
        // Double.parseDouble(tienDienStr);
        // double tienNuoc = tienNuocStr.isEmpty() ? 0 :
        // Double.parseDouble(tienNuocStr);
        // double phiDichVu = phiDichVuStr.isEmpty() ? 0 :
        // Double.parseDouble(phiDichVuStr);
        //
        // // Tính tổng tiền
        // double tongTien = tienDien + tienNuoc + phiDichVu;
        //
        // // Hiển thị tổng tiền vào ô tương ứng (giả sử bạn có một ô nhập để hiển thị
        // tổng
        // // tiền)
        // txtTongTien.setText(String.valueOf(tongTien));
        // } catch (NumberFormatException e) {
        // // Nếu xảy ra lỗi trong quá trình chuyển đổi số, có thể xử lý hoặc hiển thị
        // // thông báo lỗi
        // txtTongTien.setText("0");
        // }
    }
    // GEN-LAST:event_txtTienDienInputMethodTextChanged

    private void loadData() {
        quanLiHoaDon.loadHoaDonData(TabHoaDon);
    }

    private boolean isFirstChangePhong = true;

    private void cbxPhongItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cbxPhongItemStateChanged
        if (isFirstChangePhong) {
            isFirstChangePhong = false;
            return;
        }
        idPhong = quanLiHoaDon.getSelectedPhongID(cbxPhong);
        System.out.println("id phong " + idPhong);
    }// GEN-LAST:event_cbxPhongItemStateChanged

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm hóa đơn này?", "Xác nhận",
                JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            // Lấy dữ liệu từ form
            int id = idPhong;
            String ngayLap = txtNgayLap.getText().trim();
            String tienDienStr = txtTienDien.getText().trim();
            String tienNuocStr = txtTienNuoc.getText().trim();
            String phiDichVuStr = txtPhiDichVu.getText().trim();
            String moTa = txtMoTa.getText().trim();
            String trangThai = (String) cbxTrangThai.getSelectedItem();
            // Kiểm tra ngày lập có bị bỏ trống không
            if (ngayLap.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ngày lập hóa đơn!", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kiểm tra định dạng ngày
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date ngayDate; // Định nghĩa như là java.util.Date
            try {
                ngayDate = sdf.parse(ngayLap);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Ngày không hợp lệ! Định dạng đúng: dd/MM/yyyy", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Chuyển java.util.Date thành java.sql.Date
            java.sql.Date sqlDate = new java.sql.Date(ngayDate.getTime());

            // Kiểm tra số tiền
            double tienDien, tienNuoc, phiDichVu;
            try {
                tienDien = Double.parseDouble(tienDienStr);
                tienNuoc = Double.parseDouble(tienNuocStr);
                phiDichVu = Double.parseDouble(phiDichVuStr);

                if (tienDien < 0 || tienNuoc < 0 || phiDichVu < 0) {
                    JOptionPane.showMessageDialog(this, "Số tiền không được âm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ cho tiền điện, nước và phí dịch vụ!",
                        "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Lấy giá phòng từ CSDL
            double giaPhong = quanLiHoaDon.getGiaPhong(id); // gọi phương thức lấy giá phòng từ CSDL

            // Tính tổng tiền
            double tongTien = tienDien + tienNuoc + phiDichVu + giaPhong;

            // Gọi DAO để thêm hóa đơn
            quanLiHoaDon.themHoaDon(id, sqlDate, tienDien, tienNuoc, phiDichVu, tongTien, moTa, trangThai); // sử dụng
            // sqlDate
            quanLiHoaDon.loadHoaDonData(TabHoaDon); // Cập nhật dữ liệu vào bảng

            JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công!", "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage(), "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // GEN-LAST:event_btnThemActionPerformed
    // GEN-LAST:event_btnThemActionPerformed
    private void txtMoTaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMoTaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtMoTaActionPerformed

    @Override
    public void dispose() {
        // Khi cửa sổ QuanLyPhong đóng, mở lại TrangChinh
        TrangChu trangChinh = new TrangChu();
        trangChinh.setVisible(true); // Hiển thị lại TrangChinh
        super.dispose(); // Đảm bảo cửa sổ QuanLyPhong được đóng
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabHoaDon;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxPhong;
    private javax.swing.JComboBox<String> cbxTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtNgayLap;
    private javax.swing.JTextField txtPhiDichVu;
    private javax.swing.JTextField txtTienDien;
    private javax.swing.JTextField txtTienNuoc;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
